# This script is provided by github.com/bool64/dev.
name: test-integration
on:
  push:
    branches:
      - master
      - main
  pull_request:

# Cancel the workflow in progress in newer build is about to start.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GO111MODULE: "on"
  DOCKER_COMPOSE_FILE: ./docker-compose.yml
  GO_VERSION: 1.18.x
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go stable
        if: env.GO_VERSION != 'tip'
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install Go tip
        if: env.GO_VERSION == 'tip'
        run: |
          curl -sL https://storage.googleapis.com/go-build-snap/go/linux-amd64/$(git ls-remote https://github.com/golang/go.git HEAD | awk '{print $1;}').tar.gz -o gotip.tar.gz
          ls -lah gotip.tar.gz
          mkdir -p ~/sdk/gotip
          tar -C ~/sdk/gotip -xzf gotip.tar.gz
          ~/sdk/gotip/bin/go version
          echo "PATH=$HOME/go/bin:$HOME/sdk/gotip/bin/:$PATH" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Go cache
        uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-cache
      - name: Docker Compose
        run: (test -f ${{ env.DOCKER_COMPOSE_FILE }} && docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d && docker ps && docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs) || echo "::warning ::Missing ${{ env.DOCKER_COMPOSE_FILE }} file"
      - name: Test
        id: test
        run: |
          make test-integration
          go tool cover -func=./integration.coverprofile | sed -e 's/.go:[0-9]*:\t/.go\t/g' | sed -e 's/\t\t*/\t/g'  > integration.txt
          TOTAL=$(grep 'total:' integration.txt)
          echo "${TOTAL}"
          echo "::set-output name=total::$TOTAL"
      - name: Annotate missing test coverage
        id: annotate
        if: matrix.go-version == env.COV_GO_VERSION && ${{ github.event.pull_request.base.sha }}
        run: |
          git fetch origin master ${{ github.event.pull_request.base.sha }}
          curl -sLO https://github.com/vearutop/gocovdiff/releases/download/v0.1.0/linux_amd64.tar.gz && tar xf linux_amd64.tar.gz
          REP=$(./gocovdiff -cov unit.coverprofile -gha-annotations gha-integration.txt)
          echo "${REP}"
          REP="${REP//$'\n'/%0A}"
          cat gha-integration.txt
          echo "::set-output name=rep::$REP"
      - name: Comment Test Coverage
        continue-on-error: true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: integration-test
          message: |
            ### Integration Test Coverage
            ${{ steps.test.outputs.total }}
            <details><summary>Coverage of changed lines</summary>
            
            ${{ steps.annotate.outputs.rep }}

            </details>

      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./integration.coverprofile
          flags: integrationtests
